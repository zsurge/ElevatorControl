; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c -S -o..\6bin\uartcommandconsole.s --depend=..\6bin\uartcommandconsole.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\1McuLayer\CMSIS -I..\1McuLayer\STM32F4xx_StdPeriph_Driver\inc -I..\2LowLayer\LED -I..\3MiddleLayer\delay -I..\3MiddleLayer\sys -I..\2LowLayer\USART -I..\4UserLayer -I..\5FreeRTOS\include -I..\5FreeRTOS\portable\RVDS\ARM_CM4F -I..\2LowLayer\FLASH -I..\2LowLayer\KEY -I..\3MiddleLayer\easyflash\inc -I..\2LowLayer\TIME -I..\2LowLayer\FLASH\inc -I..\3MiddleLayer\ini -I..\3MiddleLayer\stmflash -I..\3MiddleLayer\ymodem -I..\3MiddleLayer\cjson -I..\3MiddleLayer\malloc -I..\2LowLayer\BEEP -I..\2LowLayer\INFRARED -I.\RTE\_SMCS_BASE_APP -Id:\Keil_v5\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=527 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER --omf_browse=..\6bin\uartcommandconsole.crf ..\5FreeRTOS\cli\UARTCommandConsole.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.prvUARTCommandConsoleTask||, CODE, READONLY, ALIGN=2

prvUARTCommandConsoleTask PROC
        PUSH     {r3,lr}
        MOVS     r4,#0
        BL       FreeRTOS_CLIGetOutputBuffer
        MOV      r10,r0
        MOVS     r1,#0x19
        MOV      r0,#0x1c200
        BL       xSerialPortInitMinimal
        LDR      r5,|L0.256|
        MOV      r11,r0
        LDR      r0,[r5,#0]  ; pcWelcomeMessage
        BL       strlen
        UXTH     r2,r0
        MOV      r0,r11
        LDR      r1,[r5,#0]  ; pcWelcomeMessage
        BL       vSerialPutString
        LDR      r7,|L0.260|
        LDR      r6,|L0.264|
        MOV      r9,#0xffffffff
|L0.48|
        MOV      r8,r9
        MOV      r2,r9
        MOV      r1,sp
        MOV      r0,r11
        BL       xSerialGetChar
        CMP      r0,#1
        BNE      |L0.48|
        MOV      r1,#0x12c
        LDR      r0,[r6,#0]  ; xTxMutex
        BL       xQueueSemaphoreTake
        CMP      r0,#1
        BNE      |L0.48|
        MOV      r2,r8
        LDRSB    r1,[sp,#0]
        MOV      r0,r11
        BL       xSerialPutChar
        LDRSB    r0,[sp,#0]
        CMP      r0,#0xa
        BEQ      |L0.142|
        CMP      r0,#0xd
        BEQ      |L0.142|
        CMP      r0,#8
        BEQ      |L0.242|
        CMP      r0,#0x7f
        BEQ      |L0.242|
        SUB      r1,r0,#0x20
        CMP      r1,#0x5e
        BHI      |L0.128|
        CMP      r4,#0x32
        BCS      |L0.128|
        STRB     r0,[r7,r4]
        ADDS     r4,r4,#1
        UXTB     r4,r4
|L0.128|
        MOVS     r3,#0
        MOV      r2,r3
        MOV      r1,r3
        LDR      r0,[r6,#0]  ; xTxMutex
        BL       xQueueGenericSend
        B        |L0.48|
|L0.142|
        LDR      r0,[r5,#8]  ; pcNewLine
        BL       strlen
        UXTH     r2,r0
        MOV      r0,r11
        LDR      r1,[r5,#8]  ; pcNewLine
        BL       vSerialPutString
        CBNZ     r4,|L0.170|
        LDR      r1,|L0.260|
        LDR      r0,|L0.260|
        ADDS     r1,r1,#0x32
        BL       strcpy
|L0.170|
        MOV      r8,#0x400
|L0.174|
        MOV      r2,r8
        MOV      r1,r10
        LDR      r0,|L0.260|
        BL       FreeRTOS_CLIProcessCommand
        MOV      r4,r0
        MOV      r0,r10
        BL       strlen
        UXTH     r2,r0
        MOV      r1,r10
        MOV      r0,r11
        BL       vSerialPutString
        CMP      r4,#0
        BNE      |L0.174|
        LDR      r1,|L0.260|
        ADD      r0,r1,#0x32
        BL       strcpy
        MOVS     r1,#0x32
        LDR      r0,|L0.260|
        BL       __aeabi_memclr
        LDR      r0,[r5,#4]  ; pcEndOfOutputMessage
        BL       strlen
        UXTH     r2,r0
        MOV      r0,r11
        LDR      r1,[r5,#4]  ; pcEndOfOutputMessage
        BL       vSerialPutString
        B        |L0.128|
|L0.242|
        CMP      r4,#0
        BEQ      |L0.128|
        SUBS     r4,r4,#1
        UXTB     r4,r4
        MOVS     r0,#0
        STRB     r0,[r7,r4]
        B        |L0.128|
        ENDP

|L0.256|
        DCD      ||.constdata||
|L0.260|
        DCD      ||.bss||
|L0.264|
        DCD      ||.data||

        AREA ||i.vOutputString||, CODE, READONLY, ALIGN=2

vOutputString PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L1.56|
        MOV      r5,r0
        MOV      r1,#0x12c
        LDR      r0,[r4,#0]  ; xTxMutex
        BL       xQueueSemaphoreTake
        CMP      r0,#1
        BNE      |L1.52|
        MOV      r0,r5
        BL       strlen
        UXTH     r2,r0
        MOV      r1,r5
        LDR      r0,[r4,#4]  ; xPort
        BL       vSerialPutString
        LDR      r0,[r4,#0]  ; xTxMutex
        POP      {r4-r6,lr}
        MOVS     r3,#0
        MOV      r2,r3
        MOV      r1,r3
        B.W      xQueueGenericSend
|L1.52|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L1.56|
        DCD      ||.data||

        AREA ||i.vUARTCommandConsoleStart||, CODE, READONLY, ALIGN=2

vUARTCommandConsoleStart PROC
        PUSH     {r2-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOVS     r0,#1
        BL       xQueueCreateMutex
        LDR      r1,|L2.56|
        STR      r0,[r1,#0]  ; xTxMutex
        CBZ      r0,|L2.38|
        MOVS     r0,#0
        STRD     r4,r0,[sp,#0]
        MOV      r3,r0
        MOV      r2,r5
        ADR      r1,|L2.60|
        LDR      r0,|L2.64|
        BL       xTaskCreate
        POP      {r2-r6,pc}
|L2.38|
        MOVS     r0,#0x50
        MSR      BASEPRI,r0
        DSB      
        ISB      
|L2.52|
        B        |L2.52|
        ENDP

        DCW      0x0000
|L2.56|
        DCD      ||.data||
|L2.60|
        DCB      "CLI",0
|L2.64|
        DCD      prvUARTCommandConsoleTask

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=0

cInputString
        %        50
cLastInputString
        %        50

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

pcWelcomeMessage
        DCD      ||.conststring||
pcEndOfOutputMessage
        DCD      ||.conststring||+0x50
pcNewLine
        DCD      ||.conststring||+0x8c

        AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

        DCB      "FreeRTOS command server.\r\nType Help to view a list of"
        DCB      " registered commands.\r\n\r\n>",0
        DCB      "\r\n[Press ENTER to execute the previous command again]"
        DCB      "\r\n>",0
        DCB      0
        DCB      0
        DCB      0
        DCB      "\r\n",0

        AREA ||.data||, DATA, ALIGN=2

xTxMutex
        DCD      0x00000000
xPort
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\5FreeRTOS\\cli\\UARTCommandConsole.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_UARTCommandConsole_c_eda24c71____REV16|
#line 129 "..\\1McuLayer\\CMSIS\\core_cmInstr.h"
|__asm___20_UARTCommandConsole_c_eda24c71____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_UARTCommandConsole_c_eda24c71____REVSH|
#line 144
|__asm___20_UARTCommandConsole_c_eda24c71____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT vOutputString [CODE]
        EXPORT vUARTCommandConsoleStart [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT FreeRTOS_CLIGetOutputBuffer [CODE]
        IMPORT xSerialPortInitMinimal [CODE]
        IMPORT strlen [CODE]
        IMPORT vSerialPutString [CODE]
        IMPORT xSerialGetChar [CODE]
        IMPORT xQueueSemaphoreTake [CODE]
        IMPORT xSerialPutChar [CODE]
        IMPORT strcpy [CODE]
        IMPORT FreeRTOS_CLIProcessCommand [CODE]
        IMPORT __aeabi_memclr [CODE]
        IMPORT xQueueGenericSend [CODE]
        IMPORT xQueueCreateMutex [CODE]
        IMPORT xTaskCreate [CODE]

        KEEP prvUARTCommandConsoleTask
        KEEP cInputString
        KEEP cLastInputString
        KEEP pcWelcomeMessage
        KEEP pcEndOfOutputMessage
        KEEP pcNewLine
        KEEP xTxMutex
        KEEP xPort

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END

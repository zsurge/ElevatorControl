; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c -S -o..\6bin\cli_serial.s --depend=..\6bin\cli_serial.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\1McuLayer\CMSIS -I..\1McuLayer\STM32F4xx_StdPeriph_Driver\inc -I..\2LowLayer\LED -I..\3MiddleLayer\delay -I..\3MiddleLayer\sys -I..\2LowLayer\USART -I..\4UserLayer -I..\5FreeRTOS\include -I..\5FreeRTOS\portable\RVDS\ARM_CM4F -I..\2LowLayer\FLASH -I..\2LowLayer\KEY -I..\3MiddleLayer\easyflash\inc -I..\2LowLayer\TIME -I..\2LowLayer\FLASH\inc -I..\3MiddleLayer\ini -I..\3MiddleLayer\stmflash -I..\3MiddleLayer\ymodem -I..\3MiddleLayer\cjson -I..\3MiddleLayer\malloc -I..\2LowLayer\BEEP -I..\2LowLayer\INFRARED -I.\RTE\_SMCS_BASE_APP -Id:\Keil_v5\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=527 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER --omf_browse=..\6bin\cli_serial.crf ..\5FreeRTOS\cli\CLI_Serial.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.USART2_IRQHandler||, CODE, READONLY, ALIGN=2

USART2_IRQHandler PROC
        PUSH     {r2-r6,lr}
        MOVS     r0,#0
        LDR      r5,|L0.124|
        MOV      r6,#0x727
        STR      r0,[sp,#0]
        MOV      r1,r6
        MOV      r0,r5
        BL       USART_GetITStatus
        LDR      r4,|L0.128|
        CMP      r0,#1
        BNE      |L0.50|
        MOV      r2,sp
        ADD      r1,sp,#4
        LDR      r0,[r4,#4]  ; xCharsForTx
        BL       xQueueReceiveFromISR
        CMP      r0,#1
        BEQ      |L0.66|
        MOVS     r2,#0
        MOV      r1,r6
        MOV      r0,r5
        BL       USART_ITConfig
|L0.50|
        MOV      r1,#0x525
        MOV      r0,r5
        BL       USART_GetITStatus
        CMP      r0,#1
        BEQ      |L0.78|
        B        |L0.100|
|L0.66|
        LDRB     r1,[sp,#4]
        MOV      r0,r5
        BL       USART_SendData
        B        |L0.50|
|L0.78|
        MOV      r0,r5
        BL       USART_ReceiveData
        STRB     r0,[sp,#4]
        MOVS     r3,#0
        MOV      r2,sp
        ADD      r1,sp,#4
        LDR      r0,[r4,#0]  ; xRxedChars
        BL       xQueueGenericSendFromISR
|L0.100|
        LDR      r0,[sp,#0]
        CMP      r0,#0
        BEQ      |L0.122|
        LDR      r1,|L0.132|
        MOV      r0,#0x10000000
        STR      r0,[r1,#0]
        DSB      
        ISB      
|L0.122|
        POP      {r2-r6,pc}
        ENDP

|L0.124|
        DCD      0x40004400
|L0.128|
        DCD      ||.data||
|L0.132|
        DCD      0xe000ed04

        AREA ||i._sys_exit||, CODE, READONLY, ALIGN=1

_sys_exit PROC
        BX       lr
        ENDP


        AREA ||i._ttywrch||, CODE, READONLY, ALIGN=1

_ttywrch PROC
        BX       lr
        ENDP


        AREA ||i.fputc||, CODE, READONLY, ALIGN=2

fputc PROC
        LDR      r1,|L3.20|
|L3.2|
        LDRH     r2,[r1,#0]
        LSLS     r2,r2,#25
        BPL      |L3.2|
        LDR      r2,|L3.20|
        UXTB     r1,r0
        ADDS     r2,r2,#4
        STRH     r1,[r2,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L3.20|
        DCD      0x40004800

        AREA ||i.vSerialClose||, CODE, READONLY, ALIGN=1

vSerialClose PROC
        BX       lr
        ENDP


        AREA ||i.vSerialPutString||, CODE, READONLY, ALIGN=1

vSerialPutString PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r1
        MOV      r5,r0
        B        |L5.18|
|L5.8|
        MOVS     r2,#0
        MOV      r0,r5
        BL       xSerialPutChar
        ADDS     r4,r4,#1
|L5.18|
        LDRSB    r1,[r4,#0]
        CMP      r1,#0
        BNE      |L5.8|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.xSerialGetChar||, CODE, READONLY, ALIGN=2

xSerialGetChar PROC
        LDR      r0,|L6.20|
        PUSH     {r4,lr}
        LDR      r0,[r0,#0]  ; xRxedChars
        BL       xQueueReceive
        CMP      r0,#0
        BEQ      |L6.16|
        MOVS     r0,#1
|L6.16|
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L6.20|
        DCD      ||.data||

        AREA ||i.xSerialPortInitMinimal||, CODE, READONLY, ALIGN=2

xSerialPortInitMinimal PROC
        PUSH     {r4-r9,lr}
        MOV      r5,r1
        MOV      r9,r0
        SUB      sp,sp,#0x1c
        MOVS     r2,#0
        MOVS     r1,#1
        MOV      r0,r5
        BL       xQueueGenericCreate
        LDR      r4,|L7.224|
        MOVS     r2,#0
        MOVS     r1,#1
        STR      r0,[r4,#0]  ; xRxedChars
        ADDS     r0,r5,#1
        BL       xQueueGenericCreate
        STR      r0,[r4,#4]  ; xCharsForTx
        LDR      r1,[r4,#0]  ; xRxedChars
        CMP      r1,#0
        BEQ      |L7.212|
        CBZ      r0,|L7.168|
        LDR      r6,|L7.228|
        MOV      r0,r6
        BL       USART_DeInit
        MOVS     r1,#1
        MOV      r0,r1
        BL       RCC_AHB1PeriphClockCmd
        MOVS     r1,#1
        LSLS     r0,r1,#17
        BL       RCC_APB1PeriphClockCmd
        LDR      r8,|L7.232|
        MOVS     r2,#7
        MOVS     r1,#2
        MOV      r0,r8
        BL       GPIO_PinAFConfig
        MOVS     r2,#7
        MOVS     r1,#3
        MOV      r0,r8
        BL       GPIO_PinAFConfig
        MOVS     r0,#2
        STRB     r0,[sp,#0x14]
        STRB     r0,[sp,#0x15]
        MOVS     r4,#0
        MOVS     r5,#0xc
        STRB     r4,[sp,#0x16]
        MOVS     r7,#1
        STR      r5,[sp,#0x10]
        STRB     r7,[sp,#0x17]
        ADD      r1,sp,#0x10
        MOV      r0,r8
        BL       GPIO_Init
        STRH     r4,[sp,#4]
        STRH     r4,[sp,#8]
        STR      r9,[sp,#0]
        STRH     r4,[sp,#6]
        STRH     r4,[sp,#0xc]
        STRH     r5,[sp,#0xa]
        MOV      r1,sp
        MOV      r0,r6
        BL       USART_Init
        MOVS     r0,#0x26
        STRB     r0,[sp,#0x18]
        MOVS     r0,#0xa
        B        |L7.170|
|L7.168|
        B        |L7.212|
|L7.170|
        STRB     r0,[sp,#0x19]
        MOVS     r0,#5
        STRB     r0,[sp,#0x1a]
        STRB     r7,[sp,#0x1b]
        ADD      r0,sp,#0x18
        BL       NVIC_Init
        MOVS     r2,#1
        MOV      r1,#0x525
        MOV      r0,r6
        BL       USART_ITConfig
        MOVS     r1,#1
        MOV      r0,r6
        BL       USART_Cmd
        B        |L7.216|
|L7.212|
        MOV      r9,#0
|L7.216|
        ADD      sp,sp,#0x1c
        MOV      r0,r9
        POP      {r4-r9,pc}
        ENDP

|L7.224|
        DCD      ||.data||
|L7.228|
        DCD      0x40004400
|L7.232|
        DCD      0x40020000

        AREA ||i.xSerialPutChar||, CODE, READONLY, ALIGN=2

xSerialPutChar PROC
        PUSH     {r0-r2,r4,r5,lr}
        LDR      r0,|L8.40|
        MOVS     r3,#0
        ADD      r1,sp,#4
        LDR      r0,[r0,#4]  ; xCharsForTx
        BL       xQueueGenericSend
        CMP      r0,#1
        BEQ      |L8.24|
        MOVS     r4,#0
|L8.20|
        MOV      r0,r4
        POP      {r1-r5,pc}
|L8.24|
        MOVS     r4,#1
        MOV      r2,r4
        MOV      r1,#0x727
        LDR      r0,|L8.44|
        BL       USART_ITConfig
        B        |L8.20|
        ENDP

|L8.40|
        DCD      ||.data||
|L8.44|
        DCD      0x40004400

        AREA ||i.xUsart2Init||, CODE, READONLY, ALIGN=2

xUsart2Init PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOVS     r1,#1
        SUB      sp,sp,#0x20
        MOV      r0,r1
        BL       RCC_AHB1PeriphClockCmd
        MOVS     r1,#1
        LSLS     r0,r1,#17
        BL       RCC_APB1PeriphClockCmd
        LDR      r6,|L9.168|
        MOVS     r2,#7
        MOVS     r1,#2
        MOV      r0,r6
        BL       GPIO_PinAFConfig
        MOVS     r2,#7
        MOVS     r1,#3
        MOV      r0,r6
        BL       GPIO_PinAFConfig
        MOVS     r1,#2
        STRB     r1,[sp,#0x14]
        STRB     r1,[sp,#0x15]
        MOVS     r4,#0
        MOVS     r5,#0xc
        STRB     r4,[sp,#0x16]
        MOVS     r7,#1
        STR      r5,[sp,#0x10]
        STRB     r7,[sp,#0x17]
        ADD      r1,sp,#0x10
        MOV      r0,r6
        BL       GPIO_Init
        STRH     r4,[sp,#4]
        STRH     r4,[sp,#6]
        STRH     r4,[sp,#8]
        STRH     r4,[sp,#0xc]
        LDR      r4,|L9.172|
        STR      r8,[sp,#0]
        STRH     r5,[sp,#0xa]
        MOV      r1,sp
        MOV      r0,r4
        BL       USART_Init
        MOVS     r1,#0x26
        STRB     r1,[sp,#0x18]
        MOVS     r0,#0xa
        STRB     r0,[sp,#0x19]
        MOVS     r0,#5
        STRB     r0,[sp,#0x1a]
        STRB     r7,[sp,#0x1b]
        ADD      r0,sp,#0x18
        BL       NVIC_Init
        MOVS     r2,#1
        MOV      r1,#0x525
        MOV      r0,r4
        BL       USART_ITConfig
        MOVS     r1,#1
        MOV      r0,r4
        BL       USART_Cmd
        ADD      sp,sp,#0x20
        POP      {r4-r8,pc}
        ENDP

|L9.168|
        DCD      0x40020000
|L9.172|
        DCD      0x40004400

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

xRxedChars
        DCD      0x00000000
xCharsForTx
        DCD      0x00000000

        AREA ||area_number.13||, DATA, ALIGN=2

        EXPORTAS ||area_number.13||, ||.data||
__stdout
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\5FreeRTOS\\cli\\CLI_Serial.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_CLI_Serial_c_9275e5e5____REV16|
#line 129 "..\\1McuLayer\\CMSIS\\core_cmInstr.h"
|__asm___12_CLI_Serial_c_9275e5e5____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_CLI_Serial_c_9275e5e5____REVSH|
#line 144
|__asm___12_CLI_Serial_c_9275e5e5____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT USART2_IRQHandler [CODE]
        EXPORT _sys_exit [CODE]
        EXPORT _ttywrch [CODE]
        EXPORT fputc [CODE]
        EXPORT vSerialClose [CODE]
        EXPORT vSerialPutString [CODE]
        EXPORT xSerialGetChar [CODE]
        EXPORT xSerialPortInitMinimal [CODE]
        EXPORT xSerialPutChar [CODE]
        EXPORT xUsart2Init [CODE]
        EXPORT __stdout [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __use_no_semihosting [CODE]
        IMPORT RCC_AHB1PeriphClockCmd [CODE]
        IMPORT RCC_APB1PeriphClockCmd [CODE]
        IMPORT GPIO_PinAFConfig [CODE]
        IMPORT GPIO_Init [CODE]
        IMPORT USART_Init [CODE]
        IMPORT NVIC_Init [CODE]
        IMPORT USART_ITConfig [CODE]
        IMPORT USART_Cmd [CODE]
        IMPORT xQueueGenericCreate [CODE]
        IMPORT USART_DeInit [CODE]
        IMPORT xQueueReceive [CODE]
        IMPORT xQueueGenericSend [CODE]
        IMPORT USART_GetITStatus [CODE]
        IMPORT xQueueReceiveFromISR [CODE]
        IMPORT USART_SendData [CODE]
        IMPORT USART_ReceiveData [CODE]
        IMPORT xQueueGenericSendFromISR [CODE]

        KEEP xRxedChars
        KEEP xCharsForTx

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END

/******************************************************************************

                  版权所有 (C), 2013-2023, 深圳博思高科技有限公司

 ******************************************************************************
  文 件 名   : drv_infrared.c
  版 本 号   : 初稿
  作    者   : 张舵
  生成日期   : 2019年6月28日
  最近修改   :
  功能描述   : 处理红外传感器信号
  函数列表   :
  修改历史   :
  1.日    期   : 2019年6月28日
    作    者   : 张舵
    修改内容   : 创建文件

******************************************************************************/

/*----------------------------------------------*
 * 包含头文件                                   *
 *----------------------------------------------*/
#include "drv_infrared.h"


/*----------------------------------------------*
 * 宏定义                                       *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 常量定义                                     *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 模块级变量                                   *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 内部函数原型说明                             *
 *----------------------------------------------*/
void drv_infrared_init ( void )
{
	GPIO_InitTypeDef  GPIO_InitStructure;

	RCC_AHB1PeriphClockCmd ( RCC_ALL_SENSOR, ENABLE );	//使能GPIOF时钟


	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_SENSOR1 ;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;			//普通输入模式
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		//100MHz
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;		    //上拉
	GPIO_Init ( GPIO_PORT_SENSOR1, &GPIO_InitStructure );		//初始化GPIO

	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_SENSOR2 ;	    //LED0和LED1对应IO口
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;			//普通输入模式
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;		    //上拉
	GPIO_Init ( GPIO_PORT_SENSOR2, &GPIO_InitStructure );		//初始化GPIO

	GPIO_SetBits ( GPIO_PORT_SENSOR1,GPIO_PIN_SENSOR1 );
	GPIO_SetBits ( GPIO_PORT_SENSOR1,GPIO_PIN_SENSOR2 );
}

uint8_t drv_infrared_scan ( void )
{

//	if(GETS1==0||GETS2==0)
//	{
//		delay_ms(200);//去抖动
//		if(GETS1==0)return 1;
//		else if(GETS2==0)return 2;
//	}
//
// 	return 0;// 无按键按下

	static u8 key_up=1;//按键按松开标志
	u8 mode = 0;
	if ( mode )
	{
		key_up=1;    //支持连按
	}

	if ( key_up&& ( GETS1==0||GETS2==0 ) )
	{
		delay_ms ( 10 ); //去抖动
		key_up=0;
		if ( GETS1==0 )
		{
			return 1;
		}
		else if ( GETS2==0 )
		{
			return 2;
		}

	}
	else if ( GETS1==1&&GETS2==1 )
	{
		key_up=1;
	}
	return 0;// 无按键按下
}





//下降沿触发
static uint8_t keyDown = 0;
//按键持续按下
static uint8_t keyContinue = 0;
//上升沿触发
static uint8_t keyUp = 0;


//读取按键端口状态返回按键ID
static uint8_t bsp_getKeyState(void){
    if(GPIO_ReadInputDataBit(KEY1_PORT,KEY1_PIN) == 0)
        return KEY1_ID;
    else if(GPIO_ReadInputDataBit(KEY2_PORT,KEY2_PIN) == 0)
        return KEY2_ID;
    else
        return 0;
}
void bsp_keyScan(void){
    uint8_t readData = 0;
    static uint16_t longKeyTime = 0;
    static uint8_t repeatCount = 0;
    //程序核心部分，以下四条语句实现8个按键扫描
    
    readData = bsp_getKeyState();
    //记录下降沿触发 ，仅出现一次，出现后自消除，持续时间 = 扫描时间，相当于一个脉冲
    keyDown  = readData & (readData ^ keyContinue);
    //记录上升沿触发 ，仅出现一次，出现后自消除，持续时间 = 扫描时间 ，相当于一个脉冲
    keyUp =  readData ^ (readData | keyContinue);
    //按键持续按下记录
    keyContinue = readData;

    if(keyDown){
            switch(keyDown){
            case KEY1_ID:
                break;
            case KEY2_ID:
                break;
            case KEY3_ID:
                break;
            case KEY4_ID:
                break;
            case KEY5_ID:
                break;
            case KEY6_ID:
                break;
            case KEY7_ID:
                break;
            case KEY8_ID:
                break;
            default: break;
            }
        }else
        //按键持续按下处理
        if(keyContinue){
            if(longKeyTime < KEY_LONG_TIME){
                //按键长按处理，只进来一次
                if(++longKeyTime == KEY_LONG_TIME){
                    switch(keyContinue){
                    case KEY1_ID:
                        break;
                    case KEY2_ID:
                        break;
                    case KEY3_ID:
                        break;
                    case KEY4_ID:
                        break;
                    case KEY5_ID:
                        break;
                    case KEY6_ID:
                        break;
                    case KEY7_ID:
                        break;
                    case KEY8_ID:
                        break;
                    default: break;
                    }
                }
            }else {
                //按键长按后连发处理
                if(++repeatCount >= KEY_REPEAT_SPEED){
                    repeatCount = 0;
                    switch(keyContinue){
                    case KEY1_ID:
                        break;
                    case KEY2_ID:
                        break;
                    case KEY3_ID:
                        break;
                    case KEY4_ID:
                        break;
                    case KEY5_ID:
                        break;
                    case KEY6_ID:
                        break;
                    case KEY7_ID:
                        break;
                    case KEY8_ID:
                        break;
                    default: break;
                    }
                }
            }
        }else
        //按键抬起后处理
        if(keyUp){
    
            longKeyTime = 0;
            repeatCount = 0;
    
            switch(keyUp){
            case KEY1_ID:
                break;
            case KEY2_ID:
                break;
            case KEY3_ID:
                break;
            case KEY4_ID:
                break;
            case KEY5_ID:
                break;
            case KEY6_ID:
                break;
            case KEY7_ID:
                break;
            case KEY8_ID:
                break;
            default: break;
            }
    
        }
    --------------------- 
    作者：Forever8Sun 
    来源：CSDN 
    原文：https://blog.csdn.net/syhys/article/details/72956178 
    版权声明：本文为博主原创文章，转载请附上博文链接！

}




